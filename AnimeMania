repeat wait() until game:IsLoaded() and game.Players and game.Players.LocalPlayer and game.Players.LocalPlayer.Character
if game.PlaceId == 6284881984 then -- if main lobby
    warn('Map:', _G.Level)
    if _G.AutoMerge then
	wait(5.5) -- game doesn't load your inventory until a bit, so gotta wait
	for _,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.CharacterSelection.Inventory.Inventory:GetChildren()) do
	if v:IsA("ImageLabel") then
    		if v.Star.Visible == false then
        		game:GetService("ReplicatedStorage").Remotes.FeedCharacter:InvokeServer({ [v.Key.Value]= true }, _G.MergeCharacter)
        		game:GetService("ReplicatedStorage").Remotes.CharacterSelection:InvokeServer()
        		game:GetService("ReplicatedStorage").Remotes.CharacterCheck:InvokeServer()
			warn('Combined', v.Name)
end
end
end
end
    game:GetService("ReplicatedStorage").Remotes.CreateRoom:InvokeServer(_G.Level, _G.Password)
    game:GetService("ReplicatedStorage").Remotes.BeginRoom:FireServer()
else
    local me = game.Players.LocalPlayer -- variable for easier usage later
	
    local mt = getrawmetatable(game)
    local old = mt.__namecall
    setreadonly(mt, false)
    mt.__namecall = newcclosure(function(name, ...)
        if tostring(getnamecallmethod()):lower() == "kick" then
            return
        elseif getnamecallmethod() == "FireServer" and tostring(name) == "Ban" then
            return
        end
    return old(name, ...)
    end)

    game:GetService("RunService").RenderStepped:Connect(function()
    me.Character.Humanoid:ChangeState(11)
    end)
    game.Players.LocalPlayer.DevCameraOcclusionMode = "Invisicam"
    
	if _G.AttackType == "Spin" then
		while wait(.1) do
		    pcall(function()
				for _,v in pairs(game:GetService("Workspace").Living:GetChildren()) do
				    if v:FindFirstChild("AI") then
    					if v.Humanoid.Health > 0 then
    						me.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame + Vector3.new(-(_G.Distance), -(_G.Distance), 0)
    						me.Character.HumanoidRootPart.CFrame = CFrame.new(me.Character.HumanoidRootPart.Position, v.HumanoidRootPart.Position)
    						me.Backpack.Input.Remote:FireServer({'Light'})
						if not _G.NoSkill1 then
    							game:GetService("Players").LocalPlayer.Backpack.Input.Remote:FireServer({'Skill', '1'})
						end
						if not _G.NoSkill2 then
    							game:GetService("Players").LocalPlayer.Backpack.Input.Remote:FireServer({'Skill', '2'})
						end
						if not _G.NoSkill3 then
    							game:GetService("Players").LocalPlayer.Backpack.Input.Remote:FireServer({'Skill', '3'})
						end
						if not _G.NoSkill4 then
    							game:GetService("Players").LocalPlayer.Backpack.Input.Remote:FireServer({'Skill', '4'})
						end
    						game:GetService("Players").LocalPlayer.Backpack.Input.Remote:FireServer({ "Skill", "TeamAssist" })
    						wait(.15)
    						me.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame + Vector3.new(-(_G.Distance), -(_G.Distance), -(_G.Distance))
    						me.Character.HumanoidRootPart.CFrame = CFrame.new(me.Character.HumanoidRootPart.Position, v.HumanoidRootPart.Position)
    						me.Backpack.Input.Remote:FireServer({'Light'})
    						wait(.15)
    						me.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame + Vector3.new(0, -(_G.Distance), -(_G.Distance))
    						me.Character.HumanoidRootPart.CFrame = CFrame.new(me.Character.HumanoidRootPart.Position, v.HumanoidRootPart.Position)
    						me.Backpack.Input.Remote:FireServer({'Light'})
    						wait(.15)
    						me.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame + Vector3.new((_G.Distance), -(_G.Distance), -(_G.Distance))
    						me.Character.HumanoidRootPart.CFrame = CFrame.new(me.Character.HumanoidRootPart.Position, v.HumanoidRootPart.Position)
    						me.Backpack.Input.Remote:FireServer({'Light'})
    						wait(.1)
    						me.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame + Vector3.new((_G.Distance), -(_G.Distance), 0)
    						me.Character.HumanoidRootPart.CFrame = CFrame.new(me.Character.HumanoidRootPart.Position, v.HumanoidRootPart.Position)
    						me.Backpack.Input.Remote:FireServer({'Light'})
    						wait(.15)
    						me.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame + Vector3.new(0, -(_G.Distance), (_G.Distance))
    						me.Character.HumanoidRootPart.CFrame = CFrame.new(me.Character.HumanoidRootPart.Position, v.HumanoidRootPart.Position)
    						me.Backpack.Input.Remote:FireServer({'Light'})
    						wait(.15)
						end
					end
				end
		    end)
			end
    else
	    while wait(.1) do
			pcall(function()
				for _,v in pairs(game:GetService("Workspace").Living:GetChildren()) do
				    if v:FindFirstChild("AI") then
    					if v.Humanoid.Health > 0 then
    						me.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame + Vector3.new(0, -(_G.Distance), 0)
    						me.Character.HumanoidRootPart.CFrame = CFrame.new(me.Character.HumanoidRootPart.Position, v.HumanoidRootPart.Position)
    						me.Backpack.Input.Remote:FireServer({'Light'})
						if not _G.NoSkill1 then
    							game:GetService("Players").LocalPlayer.Backpack.Input.Remote:FireServer({'Skill', '1'})
						end
						if not _G.NoSkill2 then
    							game:GetService("Players").LocalPlayer.Backpack.Input.Remote:FireServer({'Skill', '2'})
						end
						if not _G.NoSkill3 then
    							game:GetService("Players").LocalPlayer.Backpack.Input.Remote:FireServer({'Skill', '3'})
						end
						if not _G.NoSkill4 then
    							game:GetService("Players").LocalPlayer.Backpack.Input.Remote:FireServer({'Skill', '4'})
						end
    						game:GetService("Players").LocalPlayer.Backpack.Input.Remote:FireServer({ "Skill", "TeamAssist" })
    					end
    				end
			end
	    end)
	end
end
end
